jQuery
	- 자바스크립트로 만들어진 라이브러리, 프레임워크 처럼 사용된다.
	- DOM을 쉽게 사용할 수 있도록 지원한다.
	- 크로스브라우징을 구현
	  ----------
	  모든 브라우저에서 동일한 뷰를 볼 수 있도록 구성
	  
	  
1. 기능
	- DOM
	  : DOM객체의 필수 속성, 메소드, 노드제어, 스타일제어
	- Ajax
	- 플러그인
	  : 필요한 기능을 만들어서 제공하는 것(jQuery로 만들어진 완제품)
	- Effect
	  : 애니메이션 효과
	  
	  
2. jQuery 사용방법
	1) 라이브러리 파일을 직접 다운로드 받아서 프로젝트에 추가한 후에 사용하는 방법(js파일 추가)
		- compresses : jquery-3.6.0.min.js(압축버전 - 로딩속도 빠름)
		- uncompressed : jquery-3.6.0.js(개발자버전 - 수정해서 작업이 가능)
		=> 자바스크립트 외부라이브러리를 추가해서 사용하는 방법으로 다른 라이브러리를 추가할때 응용작업
	2) cdn방식
		- 외부사이트에서 공유한 jQuery라이브러리 경로를 추가해서 작업
		
3. 형식
	1) ready handler이용
		- 자바스크립트이므로 <script></script>태그내에서 작업
		- ready handler는 브라우저 내부에서 DOM객체가 생성이 완료되면 jQuery작업을 시작하겠다는 의미
			$(document).ready(function(){
			-----------------
			   선택자     이벤트
			         // 자바스크립트 문법 or jQuery코드
			
			
			})
			
	2) 일반적인 jQuery문법
		$("선택자").동작()
		- -------  ----
		|    |       |___________________________________________ jQuery js파일에 미리 정의되어 있는 실행할 수 있는 기능
		|    |__ css와 거의 동일 (class속성 -> . , id속성 -> #
		|
		|____ jQuery를 의미
			  jQuery의 약식기호
			  
		
		=> 무엇을 어떻게
		  -----  -----
		  선택자    동작,이벤트를 같이 정의  
			  
			  
4. 선택자
	- $(객체) : 선택자로 지정한 객체에 적용
	- $("*") : DOM객체의 모든 요소에 적용
	- $("#id명") : 작성한 id속성으로 정의된 요소에 적용 (1개의 요소)
	- $(".class명") : 작성한 class속성으로 정의된 모든 요소에 적용
	- $("태그명") : 해당 태그로 정의된 모든 요소에 적용
	- $(this) : 현재 작업 중인 엘리먼트(객체)에 적용하겠다는 의미
	- $("태그명1 태그명2") : 태그1의 하위로 정의되어 있는 태그2를 선택자로 사용
	- $("태그명.클래스명") : class속성으로 정의된 특정 태그를 선택자로 사용
	- $("태그명:first") : 태그들 중 첫 번째 엘리먼트를 선택자로 사용
	- $("태그명1 태그명2:first-child") : 모든 태그명1의 하위 엘리먼트 중 첫 번째 엘리먼들을 선택자로 사용
		  ex) $("ul li:first-child") => 모든 ul의 첫 번째 li들이 선택
	- $("[속성명]") : 작성한 속성을 갖고 있는 모든 엘리먼트를 선택자로 사용
	- $("태그명[속성명=속성값]") : 특정태그의 속성과 속성값을 비교해서 일치하는 엘리먼트를 선택자로 사용
	- $(":input태그의 type") : 해당 type속성으로 정의된 form태그의 요소가 선택
							  HTML5의 요소에도 적용
	     ex) $(":button") : <input type = "button">인 요소와 <button>인 요소 모두 선택자로 사용	
	- $("태그명:even") : 짝수
	- $("태그명:odd") : 홀수
	
5. DOM제어메소드
	
				  
			  
			  
			  
			  
			  
			  
			  
			  
			  
			  
			  